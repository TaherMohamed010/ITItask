
ï»¿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Day_1_LINQ
{
    public class Subject
    {
        public string Code { get; set; }
        public string Name { get; set; }

        public Subject(){}

        public Subject(string c, string n)
        {
            Code = c;
            Name = n;
        }
    }
    public class Student
    {
        public int ID { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public Subject[] Subjects { get; set; }

        public Student(){}

        public Student(int id, string firstName, string lastName, Subject[] subjects)
        {
            ID = id;
            FirstName = firstName;
            LastName = lastName;
            Subjects = subjects;
        }
    }

    internal class Program
    {
        static void Main(string[] args)
        {
            List<int> numbers = new List<int>() { 2, 4, 6, 7, 1, 4, 2, 9, 1 };
            var sorted = numbers.Distinct().OrderBy(s => s).ToList();

            foreach (var num in sorted)
            {
                Console.WriteLine(num);
            }

            foreach (var num in sorted)
            {
                Console.WriteLine($"(Number = {num}, multiplication = {num * num})");
            }

            string[] names = { "Tom", "Dick", "Harry", "MARY", "Jay" };

            var nameList = names.Where(s => s.Length == 3);

            foreach(var name in nameList)
            {
                Console.WriteLine(name);
            }

            var nameList_2 = names
                 .Where(n => n.ToLower().Contains("a"))
                 .OrderBy(n => n.Length);

            foreach (var name in nameList_2)
            {
                Console.WriteLine(name);
            }

            var nameList_3 = names.Take(2);

            foreach (var name in nameList_2)
            {
                Console.WriteLine(name);
            }

            List<Student> students = new List<Student>()
            {
                new Student()
                {
                    ID = 1,
                    FirstName = "Taher",
                    LastName = "Mohammed",
                    Subjects = new Subject[]
                    {
                        new Subject(){ Code = "10", Name = "OS" },
                        new Subject(){ Code = "20", Name = "Algo" }
                    }
                },
                new Student()
                {
                    ID = 2,
                    FirstName = "Aya",
                    LastName = "ALi",
                    Subjects = new Subject[]
                    {
                        new Subject(){ Code = "30", Name = "Ai" },
                        new Subject(){ Code = "10", Name = "OS" },
                        new Subject(){ Code = "40", Name = "Java" }
                    }
                },
                new Student()
                {
                    ID = 3,
                    FirstName = "Samir",
                    LastName = "Maged",
                    Subjects = new Subject[]
                    {
                        new Subject(){ Code = "40", Name = "Java" },
                        new Subject(){ Code = "30", Name = "Ai" }
                    }
                },
                new Student()
                {
                    ID = 4,  
                    FirstName = "Ahmed",
                    LastName = "Ali",
                    Subjects = new Subject[]
                    {
                        new Subject(){ Code = "10", Name = "OS" }
                    }
                }
            };
            var query1 = students.Select(s => new
                                 {
                                    FullName = s.FirstName + " " + s.LastName,
                                    SubjectCount = s.Subjects.Length
                                });
            foreach (var student in query1)
            {
                Console.WriteLine($"(FullName: {student.FullName}, Number of Subjects: {student.SubjectCount})");
            }

            var query2 = students
                .OrderByDescending(s => s.FirstName)  
                .ThenBy(s => s.LastName)              
                .Select(s => new
                {
                    s.FirstName,
                    s.LastName
                });

            foreach (var student in query2)
            {
                Console.WriteLine( $"{student.FirstName} {student.LastName}");
            }

            var query3 = students
                .SelectMany(
                    s => s.Subjects,          
                    (student, subject) => new  
                    {
                        StudentName = student.FirstName + " " + student.LastName,
                        SubjectName = subject.Name,
                        SubjectCode = subject.Code
                    }
                );

            foreach (var item in query3)
            {
                Console.WriteLine($"(Student: {item.StudentName}, Subject: {item.SubjectCode} - {item.SubjectName})");
            }

            var query4 = students
                .GroupBy(s => s.FirstName + " " + s.LastName)  
                .Select(g => new
                {
                    StudentName = g.Key,
                    Subjects = g.SelectMany(s => s.Subjects)   
                });

            foreach (var studentGroup in query4)
            {
                Console.WriteLine($"Student: {studentGroup.StudentName}");
                foreach (var subject in studentGroup.Subjects)
                {
                    Console.WriteLine($" Subject: {subject.Code} - {subject.Name}");
                }
                Console.WriteLine();
            }



        }
    }
}
